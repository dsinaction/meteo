version: "3.8"

services:
    meteo-db:
        build:
            context: ./meteo-db
            dockerfile: Dockerfile
        ports:
            - 5432:5432
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        volumes:
            - db-data:/var/lib/postgresql/data:delegated
        container_name: "meteo-db"
        networks:
            - meteo-network

    meteo-app:
        build:
            context: ./meteo-app
            dockerfile: Dockerfile
        ports:
            - 5000:5000
        container_name: "meteo-app"
        networks:
            - meteo-network
        depends_on:
            - "meteo-db"

    meteo-flow:
        build:
            context: ./meteo-flow
            dockerfile: Dockerfile
        ports:
            - 8080:8080
        environment:
            - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@meteo-db/meteo
        container_name: "meteo-flow"
        networks:
            - meteo-network
        depends_on:
            - "meteo-db"

    meteo-api:
        build:
            context: ./meteo-api
            dockerfile: Dockerfile
        ports:
            - 8081:8081
        environment:
            - PGUSER=postgres
            - PGHOST=meteo-db
            - PGPASSWORD=postgres
            - PGDATABASE=meteo
            - PGPORT=5432
        container_name: meteo-api
        networks:
          - meteo-network
        depends_on:
          - meteo-db

volumes:
    db-data:

networks:
    meteo-network:
        driver: bridge